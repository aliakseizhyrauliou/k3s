---
- name: Install pip
  ansible.builtin.apt:
    name: python3-pip
    state: present

- name: install pre-requisites
  pip:
    name:
      - openshift
      - pyyaml
      - kubernetes 

- name: Check if K3s is already installed
  ansible.builtin.stat:
    path: /usr/local/bin/k3s  
  register: k3s_installed
  become: true

- name: Download and install K3s
  ansible.builtin.shell: "curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC='--node-ip=192.168.56.15 --flannel-iface=eth1' sh -"
  when: not k3s_installed.stat.exists  
  become: true

- name: Get K3S_TOKEN
  ansible.builtin.command: cat /var/lib/rancher/k3s/server/node-token
  register: k3s_token
  become: true

- name: Install curl (if not already installed)
  package:
    name: curl
    state: present

- name: Check if HELM is already installed
  ansible.builtin.stat:
    path: /usr/local/bin/helm
  register: helm_installed
  become: true

- name: Download Helm installation script
  when: not helm_installed.stat.exists  
  get_url:
    url: https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
    dest: /tmp/get_helm.sh
    mode: '0755'
  become: true

- name: Run Helm installation script
  when: not helm_installed.stat.exists  
  command: /tmp/get_helm.sh
  args:
    creates: /usr/local/bin/helm
  register: helm_install_result
  changed_when: false
  become: true

- name: Add /usr/local/bin to PATH
  lineinfile:
    path: ~/.bashrc
    line: 'export PATH=$PATH:/usr/local/bin'
  when: helm_install_result.changed and not helm_installed.stat.exists
  become: true


- name: Read kubeconfig file
  shell: cat /etc/rancher/k3s/k3s.yaml
  register: kubeconfig_content
  become: true

- name: Print kubeconfig content
  debug:
    msg: "The content of kubeconfig is:\n{{ kubeconfig_content.stdout }}"

